# my method, 971ms cost, 1.3% beat, sad
class Solution(object):
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        l = len(nums)
        if l == 0:
            return 0
        
        i = 0
        while(1):
            i = i + 1
            if l == i:
                break
                
            if nums[i-1] == nums[i]:
                nums.remove(nums[i-1])
                l = l - 1
                i = i - 1
            
        return len(nums)
        
#other method, 85ms cost, good
class Solution(object):
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        i = 0
        if nums == []:
            return 0 
        
        for j in range(1, len(nums)):
            if nums[i] != nums[j]:
                nums[i+1] = nums[j]
                i += 1
        
        return i + 1
