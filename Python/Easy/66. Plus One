# my method, 36ms cost, 85% beat
class Solution(object):
    def plusOne(self, digits):
        """
        :type digits: List[int]
        :rtype: List[int]
        """
        
        s = 0
        for i in digits:
            s = s * 10 + i

        ns = s + 1
        r = []

        while(True):
            cur = ns % 10
            r.insert(0,cur)
            ns = ns / 10
            if ns == 0:
                break

        return r
        
# other method
class Solution(object):
    def plusOne(self, digits):
        """
        :type digits: List[int]
        :rtype: List[int]
        """
        
        num = 0
        for i in range(len(digits)):
    	    num += digits[i] * pow(10, (len(digits)-1-i))
        return [int(i) for i in str(num+1)]
